Resources:  
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:custom.userstableName}
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S               
      KeySchema:
        - AttributeName: userId
          KeyType: HASH        
      # Set the capacity based on the stage
      ProvisionedThroughput:
        ReadCapacityUnits: ${self:custom.tableThroughput}
        WriteCapacityUnits: ${self:custom.tableThroughput}
  ProjectsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:custom.projectstableName}
      AttributeDefinitions:
        - AttributeName: projectId        
          AttributeType: S     
      KeySchema:
        - AttributeName: projectId
          KeyType: HASH
      # Set the capacity based on the stage
      ProvisionedThroughput:
        ReadCapacityUnits: ${self:custom.tableThroughput}
        WriteCapacityUnits: ${self:custom.tableThroughput}
  TasksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:custom.taskstableName}
      AttributeDefinitions:
        - AttributeName: taskId
          AttributeType: S       
      KeySchema:
        - AttributeName: taskId
          KeyType: HASH        
      # Set the capacity based on the stage
      ProvisionedThroughput:
        ReadCapacityUnits: ${self:custom.tableThroughput}
        WriteCapacityUnits: ${self:custom.tableThroughput}
  PreferencesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:custom.preferncestableName}
      AttributeDefinitions:
        - AttributeName: preferenceId
          AttributeType: S               
      KeySchema:
        - AttributeName: preferenceId
          KeyType: HASH        
      # Set the capacity based on the stage
      ProvisionedThroughput:
        ReadCapacityUnits: ${self:custom.tableThroughput}
        WriteCapacityUnits: ${self:custom.tableThroughput}
 